 
<!--  $("#" + data.id + '-checkbox').attr('checked', data.value == 1); 
 var thebutton = "#" + data.id + '-checkbox';
 var boolvalue =  data.value == 1;
 $(thebutton).prop('checked', boolvalue).parent(); 
  
 var domEl = document.getElementById("my-checkbox")
ar mdlComp = new MaterialCheckbox(domEl)

// now you can just use the functions provided by the MDL component
mdlComp.uncheck();
 --> 

		<!-- socket.on('message', function(data){document.write('<p>' + data + '</p>')}); -->
		
		
				document.querySelector(data.id + '-block').MaterialCheckbox.uncheck()
				
				
				
				<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="https://code.getmdl.io/1.2.1/material.indigo-pink.min.css">
<script defer src="https://code.getmdl.io/1.2.1/material.min.js"></script>


<script                src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/3.3.2/js/bootstrap-switch.min.js"</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-switch/3.3.2/css/bootstrap3/bootstrap-switch.css"/>







function MyGpio(){
	pin = "";
	direction = "";
	edges = "";
}

  
function MySensorSwitch(pin, direction, edges, id, name) {
	pin = pin;
	direction = direction;
	edges = edges;		
	state = "";
	onText = "";
	offText = "";
	id = id;
	name = name;
	concernedState = ""
		};
	
var mySSlist = new Array();

mySSlist.push(new MySensorSwitch(4, 'in', 'both', 'switch_1', 'Garage Door'));
mySSlist.push(new MySensorSwitch(22, 'in', 'both', 'switch_2', 'Push Button'));

var arrayLength = mySSlist.length;
    console.log('arrayLength : ' + arrayLength);

for (var i = 0; i < arrayLength; i++) {
	
    console.log(mySSlist[i]);
	
/* 	console.log(mySSlist[i].direction);
	console.log(mySSlist[i].edges);
	console.log(mySSlist[i].id);
	console.log(mySSlist[i].name);
	 */
}



/*  
	mysocket.emit('sensorSwitch', {
		id: 'switch_1',
		value: 1 - switch_1.readSync()
	});

	mysocket.emit('sensorSwitch', {
		id: 'switch_2',
		value: 1 - switch_2.readSync()
	});
 */
 
 
  
	/* todo diddle with feedback light */
	
	
	console.log(1 - switch_1.readSync());
	console.log(1 - switch_2.readSync());
	console.log((1 - switch_1.readSync()) || (1 - switch_2.readSync()));
	led.writeSync((1 - switch_1.readSync()) || (1 - switch_2.readSync()));
	
	/*     
//Send a message after a timeout of 4seconds
  setTimeout(function(){
    socket.send('Sent a message 4seconds after connection!');
  }, 4000);
 */
 
 
 /*   
switch_1 = new Gpio(4, 'in', 'both');
  switch_2 = new Gpio(22, 'in', 'both');  
  
*/

/*   
var Gpio = require('onoff').Gpio,
  led = new Gpio(26, 'out'),
  switch_1 = new Gpio(4, 'in', 'both'),
  switch_2 = new Gpio(22, 'in', 'both'); 
  */
  
	
	
	
 
 






/* 
switch_1.watch(function(err, value) {
	 if (err) {
    throw err;
  }
  value = 1 - value; // invert
  console.log('switch_1: ' + value);
  led.writeSync(value);
  mysocket.emit('sensorSwitch', {
        id: 'switch_1',
        value: value
    });
}); 


switch_2.watch(function(err, value) {
	 if (err) {
    throw err;
  }
  value = 1 - value; // invert
  console.log('switch_2: ' + value);
  led.writeSync(value);
  mysocket.emit('sensorSwitch', {
        id: 'switch_2',
        value: value
    });
}); 

 */
 
 // debug write  array contents
// mySSlist.forEach(function(item, index) { console.log('   pin: ' + item.pin + '       name: ' + item.name); });



 var result = _.find(mySSlist, function(obj) { return obj.id == 'switch_2' });
console.log('result: ' + result.name);
console.log('result: ' + myFindId(mySSlist, 'switch_1').name);


switch_1 = myFindId(mySSlist, 'switch_1').gpioObj;
switch_2 = myFindId(mySSlist, 'switch_2').gpioObj;


<!--   
<div class="panel panel-default">
	<div class="panel-body">
		<div class="myBSswitch myBSsensor">
			<label id="switch_1-text"></label>  
			<input id="switch_1-checkbox" type="checkbox" data-off-text="False" data-on-text="True" checked="false" class="BSswitch"  >
		</div>
	</div>
</div>

<div class="panel panel-default" >
  <div class="panel-body">
		<div class="myBSswitch myBSsensor">
  
	<label id="switch_2-text"></label>
	<input id="switch_2-checkbox" type="checkbox" data-off-text="False" data-on-text="True" checked="false" class="BSswitch" >
	</div>
  </div>
</div>
 -->

 
 
crontab -u pi -e
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
@reboot /usr/bin/forever start /home/pi/myapp/server.js








 
 
